
package client;

import java.util.List;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Action;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.9-b130926.1035
 * Generated source version: 2.2
 * 
 */
@WebService(name = "ChatServer", targetNamespace = "http://chatserver/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface ChatServer {


    /**
     * 
     * @param name
     * @return
     *     returns boolean
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "logOff", targetNamespace = "http://chatserver/", className = "client.LogOff")
    @ResponseWrapper(localName = "logOffResponse", targetNamespace = "http://chatserver/", className = "client.LogOffResponse")
    @Action(input = "http://chatserver/ChatServer/logOffRequest", output = "http://chatserver/ChatServer/logOffResponse")
    public boolean logOff(
        @WebParam(name = "name", targetNamespace = "")
        String name);

    /**
     * 
     * @param name
     * @return
     *     returns boolean
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "logOn", targetNamespace = "http://chatserver/", className = "client.LogOn")
    @ResponseWrapper(localName = "logOnResponse", targetNamespace = "http://chatserver/", className = "client.LogOnResponse")
    @Action(input = "http://chatserver/ChatServer/logOnRequest", output = "http://chatserver/ChatServer/logOnResponse")
    public boolean logOn(
        @WebParam(name = "name", targetNamespace = "")
        String name);

    /**
     * 
     * @param name
     * @return
     *     returns java.util.List<java.lang.String>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "allMessages", targetNamespace = "http://chatserver/", className = "client.AllMessages")
    @ResponseWrapper(localName = "allMessagesResponse", targetNamespace = "http://chatserver/", className = "client.AllMessagesResponse")
    @Action(input = "http://chatserver/ChatServer/allMessagesRequest", output = "http://chatserver/ChatServer/allMessagesResponse")
    public List<String> allMessages(
        @WebParam(name = "name", targetNamespace = "")
        String name);

    /**
     * 
     * @param name
     * @param mesg
     */
    @WebMethod
    @RequestWrapper(localName = "addMessage", targetNamespace = "http://chatserver/", className = "client.AddMessage")
    @ResponseWrapper(localName = "addMessageResponse", targetNamespace = "http://chatserver/", className = "client.AddMessageResponse")
    @Action(input = "http://chatserver/ChatServer/addMessageRequest", output = "http://chatserver/ChatServer/addMessageResponse")
    public void addMessage(
        @WebParam(name = "name", targetNamespace = "")
        String name,
        @WebParam(name = "mesg", targetNamespace = "")
        String mesg);

    /**
     * 
     * @param toName
     * @param fromName
     * @param mesg
     */
    @WebMethod
    @RequestWrapper(localName = "privateMessage", targetNamespace = "http://chatserver/", className = "client.PrivateMessage")
    @ResponseWrapper(localName = "privateMessageResponse", targetNamespace = "http://chatserver/", className = "client.PrivateMessageResponse")
    @Action(input = "http://chatserver/ChatServer/privateMessageRequest", output = "http://chatserver/ChatServer/privateMessageResponse")
    public void privateMessage(
        @WebParam(name = "fromName", targetNamespace = "")
        String fromName,
        @WebParam(name = "toName", targetNamespace = "")
        String toName,
        @WebParam(name = "mesg", targetNamespace = "")
        String mesg);

    /**
     * 
     * @param name
     * @param pwd
     */
    @WebMethod
    @RequestWrapper(localName = "adminSigOnOff", targetNamespace = "http://chatserver/", className = "client.AdminSigOnOff")
    @ResponseWrapper(localName = "adminSigOnOffResponse", targetNamespace = "http://chatserver/", className = "client.AdminSigOnOffResponse")
    @Action(input = "http://chatserver/ChatServer/adminSigOnOffRequest", output = "http://chatserver/ChatServer/adminSigOnOffResponse")
    public void adminSigOnOff(
        @WebParam(name = "name", targetNamespace = "")
        String name,
        @WebParam(name = "pwd", targetNamespace = "")
        String pwd);

}
